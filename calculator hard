using System;
using System.Collections.Generic;

public class Solution {
    public int Calculate(string s) {
        int result = 0, sign = 1, n = s.Length;
        Stack<int> stack = new Stack<int>();
        
        for (int i = 0; i < n; i++) {
            char c = s[i];
            
            if (char.IsDigit(c)) {
                int num = 0;
                while (i < n && char.IsDigit(s[i])) {
                    num = num * 10 + (s[i] - '0');
                    i++;
                }
                result += sign * num;
                i--; // to counter the extra increment in the while loop
            } else if (c == '+') {
                sign = 1;
            } else if (c == '-') {
                sign = -1;
            } else if (c == '(') {
                stack.Push(result);
                stack.Push(sign);
                result = 0;
                sign = 1;
            } else if (c == ')') {
                result = result * stack.Pop() + stack.Pop();
            }
        }
        
        return result;
    }
}
