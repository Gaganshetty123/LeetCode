public class Solution {
    public ListNode SwapNodes(ListNode head, int k) {
        // Find the length of the linked list
        int length = 0;
        ListNode current = head;
        while (current != null) {
            length++;
            current = current.next;
        }
        
        // Find the kth node from the beginning
        ListNode firstKNode = head;
        for (int i = 1; i < k; i++) {
            firstKNode = firstKNode.next;
        }
        
        // Find the kth node from the end
        ListNode secondKNode = head;
        for (int i = 1; i <= length - k; i++) {
            secondKNode = secondKNode.next;
        }
        
        // Swap the values of the two nodes
        int temp = firstKNode.val;
        firstKNode.val = secondKNode.val;
        secondKNode.val = temp;
        
        return head;
    }
}
